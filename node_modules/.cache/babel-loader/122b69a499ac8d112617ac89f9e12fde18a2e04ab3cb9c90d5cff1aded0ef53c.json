{"ast":null,"code":"export default {\n  props: {},\n  inject: [\"Accordion\"],\n  data() {\n    return {\n      index: null\n    };\n  },\n  computed: {\n    visible() {\n      return this.index == this.Accordion.active;\n    }\n  },\n  methods: {\n    open() {\n      if (this.visible) {\n        this.Accordion.active = null;\n      } else {\n        this.Accordion.active = this.index;\n      }\n    },\n    start(el) {\n      el.style.height = el.scrollHeight + \"px\";\n    },\n    end(el) {\n      el.style.height = \"\";\n    }\n  },\n  created() {\n    this.index = this.Accordion.count++;\n  }\n};","map":{"version":3,"mappings":"AA+BA;EACAA;EACAC;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACAD;IACA;EACA;EACAE;IACA;EACA;AACA","names":["props","inject","data","index","computed","visible","methods","open","start","el","end","created"],"sourceRoot":"src/components","sources":["AccordionItem.vue"],"sourcesContent":["<template>\n    <li class=\"accordion__item\">\n      <div \n        class=\"accordion__trigger\"\n        :class=\"{'accordion__trigger_active': visible}\"\n        @click=\"open\">\n  \n        <!-- This slot will handle the title/header of the accordion and is the part you click on -->\n        <slot name=\"accordion-trigger\"></slot>\n      </div>\n  \n      <transition \n        name=\"accordion\"\n        @enter=\"start\"\n        @after-enter=\"end\"\n        @before-leave=\"start\"\n        @after-leave=\"end\">\n  \n        <div class=\"accordion__content\"\n          v-show=\"visible\">\n          <ul>\n            <!-- This slot will handle all the content that is passed to the accordion -->\n            <slot name=\"accordion-content\"></slot>\n          </ul>\n        </div>\n      </transition>\n    </li>\n  </template>\n  \n  \n  <script>\n  export default {\n    props: {},\n    inject: [\"Accordion\"],\n    data() {\n      return {\n        index: null\n      };\n    },\n    computed: {\n      visible() {\n        return this.index == this.Accordion.active;\n      }\n    },\n    methods: {\n      open() {\n        if (this.visible) {\n          this.Accordion.active = null;\n        } else {\n          this.Accordion.active = this.index;\n        }\n      },\n      start(el) {\n        el.style.height = el.scrollHeight + \"px\";\n      },\n      end(el) {\n        el.style.height = \"\";\n      }\n    },\n    created() {\n      this.index = this.Accordion.count++;\n    }\n  };\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  .accordion__item {\n    cursor: pointer;\n    padding: 10px 40px 10px 40px;\n    border-bottom: 1px solid #ebebeb;\n    position: relative;\n  }\n  \n  .accordion__trigger {\n    display: block;\n    justify-content: space-between;\n    text-align: center;\n  }\n  \n  .accordion-enter-active,\n  .accordion-leave-active {\n    will-change: height, opacity;\n    transition: height 0.3s ease, opacity 0.3s ease;\n    overflow: hidden;\n  }\n  \n  .accordion-enter,\n  .accordion-leave-to {\n    height: 0 !important;\n    opacity: 0;\n  }\n  </style>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}